name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AWS_REGION : "eu-west-2"
  ROLE-TO-ASSUME : "arn:aws:iam::710271940286:role/github-assume-role"

permissions:
  id-token: write   
  contents: read 

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
  
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
      with:
        role-to-assume: ${{ env.ROLE-TO-ASSUME }}
        role-session-name: github-actions-user
        aws-region: ${{ env.AWS_REGION }}

    - name: Terraform Init
      run: terraform init -reconfigure

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Plan
      run: terraform plan -input=false

      # On push to "main", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push' && github.event.head_commit.message != 'Merge pull request' && github.event.head_commit.message != 'Destroy pull request!'
      run: terraform apply -auto-approve -input=false
    
    - name: Terraform Destroy
      if: github.ref == 'refs/heads/main' && github.event_name == 'push' && github.event.head_commit.message == 'Destroy pull request!'
      run: terraform destroy -auto-approve -input=false
    
    
